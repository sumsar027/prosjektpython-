{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "199c9dc0-c3e1-46c8-b9e4-cfaec3820cf2",
   "metadata": {},
   "source": [
    "# **PROSJEKTOPPGAVE HØST 2021**\n",
    "\n",
    "- Laget av Rasmus Thorbjørnsen og Mohammed dek Hussein Abdikader"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f1489ee-ce85-4666-bae1-628b894e03a8",
   "metadata": {},
   "source": [
    "## **Problemstilling**\n",
    "\n",
    "#### Problemstillingen vi har valgt er, «Lag en funksjon som tar betingelsene for et annuitetslån med gebyrer som argumenter, og plotter renter og avdrag over tid». Denne problemstillingen er veldig relevant med tanke på hva vi studerer, og hva vi eventuelt skal jobbe med i fremtiden, det er generelt sett økonomer som jobber med ulike lån som annuitetslån. Det som også er spennende når det gjelder lån er at vi selv kommer til å oppleve det med å ta opp et lån som eksempel et boliglån, når vi da har lagd en oppgave om dette får vi mer erfaring om hvordan ulike ting fungerer. Dette kan hjelpe oss med å se hva økonomer kan jobbe med. Det er et tema vi begge er interessert i og vi ser denne problemstillingen som god erfaring  vi kommer til å bruke senere. \n",
    "\n",
    "## **Huset vi skal kjøpe**\n",
    "\n",
    "#### For prosjektet har vi valgt en unik, rålekker luksusbolig bygd i 2020. Den har eksklusive løsninger, fantastisk uteplasser, jacuzzi og trippelgarasje. Boligen ligger i Laakesetervegen 18 A, boligen koster 12 813 842 kr, men velger å runde av til 13mill for å være mer sikker. \n",
    "#### Boligen går over to etasjer og har entré, hall, tre delikate bad, vaskerom, bod, teknisk rom, kjølerom, flott kontor, fem soverom, lekkert kjøkken og to fantastiske stuer. Stuene ligger i hver sin etasje, og en har peis, projektor/kino og egen bar. Det ene soverommet er en mastersuite med et spabad av de sjeldne, samt badstue, walk-in closet, peis og balkong.\n",
    "\n",
    "#### [Her](https://www.finn.no/realestate/homes/ad.html?finnkode=222810455&fbclid=IwAR0APvSrwVjSQkWF5_UwAjenk_VN9YFriJFD-B_PIs59G9gAjfFvTP2gWcc) er linken til finn annonsen.\n",
    "\n",
    "#### Tall fra finn annonsen:\n",
    "- Prisantydning: 12 500 000 kr\n",
    "- Omkostninger: 313 842 kr\n",
    "- Totalpris: 12 813 842 kr\n",
    "\n",
    "#### Vi runder opp totalprisen til 13 000 000, for å være på den sikre siden.\n",
    "\n",
    "## **De ulike bankene**\n",
    "\n",
    "#### Vi har valgt å bruke tall fra Sparebank 1 og Nordea, vi ville sammenligne de to forskjellige bankene for å så hvor stor forskjell det faktisk kan være. Vi brukte [denne](https://www.sparebank1.no/nb/bank/privat/lan/boliglan/annuitetslan.html) siden for Sparebank1 og [denne](https://www.nordea.no/privat/vare-produkter/lan-og-kreditt/boliglan/hva-koster-boliglanet.html#/) siden for Nordea. Dette gjorde at vi kunne ha med tall i oppgaven som samsvarer med tall man får fra banker i dagens marked. \n",
    "\n",
    "## **HVA ER ANNUITETSLÅN?**\n",
    "\n",
    "#### Et annuitetslån er en type investering i flere perioder hvor det er satt inn en viss hovedstol og deretter regelmessige utbetalinger i løpet av investeringen. Betalingene er alle en fast størrelse. Et boliglån kan for eksempel være en annuitet: For å kunne kjøpe huset får du lån for å kjøpe boligen. Til gjengjeld foretar du en første innbetaling (forskuddsbetaling), og deretter utbetalinger hver måned på et fast beløp. Summen av alle innbetalingene vil være større enn lånebeløpet, akkurat som med et vanlig lån, men betalingsplanen er spredt over tid. Kort og enkelt så betales lånet ned med like store terminbeløp gjennom låneperioden. I begynnelsen er avdragsdelen liten og rentedelen stor, men ettersom tiden går stiger avdragsdelen og rentedelen synker.\n",
    "\n",
    "\n",
    "### **Ulike formler vi har brukt:**\n",
    "\n",
    "<font size=\"4\"> Terminbeløp: $\\frac{lånebeløp * prosentvis rente * (1 + prosentvis rente)^{terminer}}{(1 + prosentvis rente)^{terminer} - 1}$ </font>\n",
    "\n",
    "<font size=\"4\"> Rente: $\\frac{lånebeløp * prosentvis rente}{terminer}$ </font>\n",
    "\n",
    "<font size=\"4\"> Avdrag: $terminbeløp - rente$\n",
    "    \n",
    "<font size=\"4\"> Hovedstol: $terminbeløp*\\frac{1-(1+prosentvis rente)^-antall terminer}{prosentvis rente}$\n",
    "    \n",
    "<font size=\"4\"> Nåverdi: $terminbeløp*\\frac{1-(1+prosentvis rente)^-antall terminer}{prosentvis rente}$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ad5def26-113e-48cb-9d93-16a815f79e2e",
   "metadata": {},
   "source": [
    "## **Annuitetslån med verdier fra Sparebank 1**\n",
    "\n",
    "#### For x-verdien kan du sette inn hvilken termin du vil se verdier av"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8eb6b968-d9e4-4e38-af42-5dbcfbb1ac9d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Antall terminer : halvår 40\n",
      "Terminbeløp : kr 358526.0984622292\n",
      "Rente for 30 termin : kr 7500.0\n",
      "Avdrag for 30 termin : kr 351026.0984622292\n",
      "Lånets hovedstol : kr 9000000.000000002\n",
      "Nåverdi : kr 7504056.142955549\n",
      "Summen av lånet: kr 14341043.938489167\n"
     ]
    }
   ],
   "source": [
    "# Sett inn hvilken termin du vil se her:\n",
    "\n",
    "x = (30)\n",
    "\n",
    "r = 0.025\n",
    "\n",
    "# regner ut antall terminer\n",
    "terminer = 20*2\n",
    "\n",
    "print(\"Antall terminer : halvår \" + str(terminer))\n",
    "\n",
    "# regner ut terminbeløpet\n",
    "terminbeløp = (9000000*r*(1+r)**terminer)/((1+r)**terminer-1)\n",
    "\n",
    "print(\"Terminbeløp : kr \" + str(terminbeløp))\n",
    "\n",
    "# regner ut verdien for renten per termin\n",
    "rente = (9000000*r)/x\n",
    "\n",
    "print(\"Rente for \" + str(x) + \" termin : kr \" + str(rente))\n",
    "\n",
    "# regner ut verdien for avdrag per termin\n",
    "avdrag = terminbeløp-rente\n",
    "\n",
    "print(\"Avdrag for \" + str(x) + \" termin : kr \" + str(avdrag))\n",
    "\n",
    "# regner ut hovedstolen av lånet\n",
    "hovedstol = terminbeløp*(1-(1+r)**(-terminer))/r\n",
    "\n",
    "print(\"Lånets hovedstol : kr \" + str(hovedstol))\n",
    "\n",
    "# regner ut nåverdien av lånet\n",
    "nåverdi = terminbeløp*(1-(1+r)**(-x))/r\n",
    "\n",
    "print(\"Nåverdi : kr \" + str(nåverdi))\n",
    "\n",
    "# regner ut summen av lånet\n",
    "s = terminbeløp*terminer\n",
    "\n",
    "print(\"Summen av lånet: kr \" + str(s))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b53ea80-a2eb-4000-b63a-7333f48b4ec6",
   "metadata": {},
   "source": [
    "## **Annuitetslån med verdier fra Nordea**\n",
    "\n",
    "#### For x-verdien kan du sette inn hvilken termin du vil se verdier av"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0259e968-733c-41ec-bb05-77c44a9c3e04",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Antall terminer : halvår 40\n",
      "Terminbeløp : kr 321547.1579310876\n",
      "Rente for 30 termin : kr 5610.0\n",
      "Avdrag for 30 termin : kr 315937.1579310876\n",
      "Lånets hovedstol : kr 9000000.0\n",
      "Nåverdi : kr 7504056.142955549\n",
      "Summen av lånet: kr 12861886.317243503\n"
     ]
    }
   ],
   "source": [
    "# Sett inn hvilken termin du vil se her:\n",
    "\n",
    "x2 = (30)\n",
    "\n",
    "r2 = 0.0187\n",
    "\n",
    "# regner ut antall terminer\n",
    "terminer2 = 20*2\n",
    "\n",
    "print(\"Antall terminer : halvår \" + str(terminer2))\n",
    "\n",
    "# regner ut terminbeløpet\n",
    "terminbeløp2 = (9000000*r2*(1+r2)**terminer2)/((1+r2)**terminer2-1)\n",
    "\n",
    "print(\"Terminbeløp : kr \" + str(terminbeløp2))\n",
    "\n",
    "# regner ut verdien for renten per termin\n",
    "rente2 = (9000000*r2)/x2\n",
    "\n",
    "print(\"Rente for \" + str(x2) + \" termin : kr \" + str(rente2))\n",
    "\n",
    "# regner ut verdien for avdrag per termin\n",
    "avdrag2 = terminbeløp2-rente2\n",
    "\n",
    "print(\"Avdrag for \" + str(x2) + \" termin : kr \" + str(avdrag2))\n",
    "\n",
    "# regner ut hovedstolen av lånet\n",
    "hovedstol2 = terminbeløp2*(1-(1+r2)**(-terminer2))/r2\n",
    "\n",
    "print(\"Lånets hovedstol : kr \" + str(hovedstol2))\n",
    "\n",
    "# regner ut nåverdien av lånet\n",
    "nåverdi2 = terminbeløp2*(1-(1+r2)**(-x2))/r2\n",
    "\n",
    "print(\"Nåverdi : kr \" + str(nåverdi))\n",
    "\n",
    "# regner ut summen av lånet\n",
    "s2 = terminbeløp2*terminer2\n",
    "\n",
    "print(\"Summen av lånet: kr \" + str(s2))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "81c39f05-a642-48bb-a747-e918036103a3",
   "metadata": {},
   "source": [
    "## **Sammenligning av de to forskjellige bankene**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "3a606bdc-c583-4ef7-99b6-2d1e4fcb0caa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "\n",
    "# definerer navn\n",
    "navn = ['Sparebank1', 'Nordea']\n",
    " \n",
    "# de ulike størrelsene\n",
    "slices = [s, s2]\n",
    " \n",
    "# velger farger\n",
    "colors = ['royalblue', 'cornflowerblue']\n",
    " \n",
    "# plotter diagrammet\n",
    "plt.pie(slices, labels = navn, colors=colors,\n",
    "        startangle=90, shadow = True, explode = (0.1, 0.1),\n",
    "        radius = 1.2, autopct = '%1.1f%%')\n",
    "\n",
    "# velger farge for all teksten\n",
    "plt.rcParams['text.color'] = 'white'\n",
    "\n",
    "plt.legend()\n",
    "\n",
    "# visning \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b6354ae4-c4ce-4452-ab78-f674f187823e",
   "metadata": {},
   "source": [
    "### Fra dette kan vi se en tydelig forskjell! Nordea gir oss et lån som er 5,4% mindre enn det vi hadde fått fra Sparebank 1, dette gjorde at vi valgte Nordea ovenfor Sparebank 1"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a2d4b35-16c2-4d09-8bb9-e867105da935",
   "metadata": {},
   "source": [
    "## **Søylediagram av renten sin utvikling, Nordea**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "0cf9bfa7-9039-49d5-b1fb-21dace6ae029",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# skriver inn de ulike verdiene for rentene\n",
    "rn10 = (9000000*0.0187)/10\n",
    "rn20 = (9000000*0.0187)/20\n",
    "rn30 = (9000000*0.0187)/30\n",
    "rn40 = (9000000*0.0187)/40\n",
    "# antall x verdier\n",
    "xakse = [1, 2, 3, 4]\n",
    " \n",
    "# setter hvilke y verdier som skal brukes\n",
    "yakse = [rn10, rn20, rn30, rn40]\n",
    " \n",
    "# navn på søylene\n",
    "tick_label = ['rente 10t', 'rente 20t', 'rente 30t', 'rente 40t']\n",
    " \n",
    "# plotter søylene med angitte verdier, gir søylene ulike farger, setter tykkelsen på søylene\n",
    "plt.bar(xakse, yakse, tick_label = tick_label,\n",
    "        width = 0.9, color = ['royalblue', 'cornflowerblue', 'steelblue'])\n",
    "\n",
    "# navngir x-aksen\n",
    "plt.xlabel('')\n",
    "\n",
    "# navngir y-aksen\n",
    "plt.ylabel('kr')\n",
    "\n",
    "# navngir tittel\n",
    "plt.title('Renten sin utvikling over tid (t = terminer)')\n",
    " \n",
    "# plotter søylene\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d6115a6-6b1e-4096-974f-92c7db6d3644",
   "metadata": {},
   "source": [
    "## Søylediagram av avdraget sin utvikling Nordea"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "dc487177-3111-48d5-bd88-a48019203832",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# skriver inn de ulike verdiene for rentene\n",
    "an10 = terminbeløp2 - rn10\n",
    "an20 = terminbeløp2 - rn20\n",
    "an30 = terminbeløp2 - rn30\n",
    "an40 = terminbeløp2 - rn40\n",
    "# antall x verdier\n",
    "xakse = [1, 2, 3, 4]\n",
    " \n",
    "# setter hvilke y verdier som skal brukes\n",
    "yakse = [an10, an20, an30, an40]\n",
    " \n",
    "# navn på søylene\n",
    "tick_label = ['avdrag 10t', 'avdrag 20t', 'avdrag 30t', 'avdrag 40t']\n",
    " \n",
    "# plotter søylene med angitte verdier, gir søylene ulike farger, setter tykkelsen på søylene\n",
    "plt.bar(xakse, yakse, tick_label = tick_label,\n",
    "        width = 0.9, color = ['royalblue', 'cornflowerblue', 'steelblue'])\n",
    "\n",
    "# navngir x-aksen\n",
    "plt.xlabel('')\n",
    "\n",
    "# navngir y-aksen\n",
    "plt.ylabel('kr')\n",
    "\n",
    "# navngir tittel\n",
    "plt.title('Renten sin utvikling over tid (t = terminer)')\n",
    "\n",
    "# plotter tittel\n",
    "plt.title('Avdrag')\n",
    " \n",
    "# plotter søylene\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5003f60b-ee84-415e-b2ee-17ed8e3a542e",
   "metadata": {},
   "source": [
    "## Sirkeldiagram av nåverdien sin utvikling, Nordea"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "692b0d09-232a-40cb-9659-30d5b541bb94",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "n10 = terminbeløp2*(1-(1+r2)**(-10))/r2\n",
    "\n",
    "n20 = terminbeløp2*(1-(1+r2)**(-20))/r2\n",
    "\n",
    "n30 = terminbeløp2*(1-(1+r2)**(-30))/r2\n",
    "\n",
    "n40 = terminbeløp2*(1-(1+r2)**(-40))/r2\n",
    "\n",
    "\n",
    "# definerer navn\n",
    "navn = ['10 t', '20 t', '30 t', '40 t']\n",
    " \n",
    "# de ulike størrelsene\n",
    "slices = [n10, n20, n30, n40]\n",
    " \n",
    "# velger farger\n",
    "colors = ['royalblue', 'cornflowerblue', 'steelblue', 'royalblue']\n",
    " \n",
    "# plotter diagrammet\n",
    "plt.pie(slices, labels = navn, colors=colors,\n",
    "        startangle=90, shadow = True, explode = (0.1, 0.1, 0.1, 0.1),\n",
    "        radius = 1.2, autopct = '%1.1f%%')\n",
    "\n",
    "# velger farge for all teksten\n",
    "plt.rcParams['text.color'] = 'white'\n",
    "\n",
    "# plotter en legend\n",
    "plt.legend()\n",
    "\n",
    "# plotter tittel\n",
    "plt.title('Nåverdi')\n",
    "\n",
    "# visning \n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5343f84b-2ec0-4ed9-b80b-94a55f2dd863",
   "metadata": {},
   "source": [
    "## Her er kildene vi har brukt:\n",
    "\n",
    "- kilde1 <https://www.sparebank1.no/nb/bank/privat/lan/boliglan/annuitetslan.html>\n",
    "- kilde2 <https://www.sparebank1.no/nb/bank/privat/kundeservice/lan/Hva-er-forskjellen-pa-annuitetslan-og-serielan.html>\n",
    "- kilde3 <https://dinside.dagbladet.no/okonomi/bor-du-ha-annuitets--eller-serielan/74113305>\n",
    "- kilde4 <https://www.nettavisen.no/okonomi/norges-bank-skremmer-lantakerne-smellen-blir-mye-mindre-enn-fryktet/s/12-95-3424144729>\n",
    "- kilde5 <https://www.nordea.no/privat/vare-produkter/lan-og-kreditt/boliglan/hva-er-billigst-av-et-annuitetslan-og-et-serielan.html>"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
